// Mocks generated by Mockito 5.3.0 from annotations
// in core/test/mock/shared_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/core/commons/utils/service/location/i_location_service.dart'
    as _i4;
import 'package:core/core/model/city.dart' as _i6;
import 'package:core/core/model/model.dart' as _i3;
import 'package:location/location.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocationData_0 extends _i1.SmartFake implements _i2.LocationData {
  _FakeLocationData_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCity_1 extends _i1.SmartFake implements _i3.City {
  _FakeCity_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCoord_2 extends _i1.SmartFake implements _i3.Coord {
  _FakeCoord_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCurrentWeatherMainData_3 extends _i1.SmartFake
    implements _i3.CurrentWeatherMainData {
  _FakeCurrentWeatherMainData_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeWind_4 extends _i1.SmartFake implements _i3.Wind {
  _FakeWind_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeClouds_5 extends _i1.SmartFake implements _i3.Clouds {
  _FakeClouds_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSys_6 extends _i1.SmartFake implements _i3.Sys {
  _FakeSys_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ILocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocationService extends _i1.Mock implements _i4.ILocationService {
  MockILocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LocationData> getLocation() => (super.noSuchMethod(
          Invocation.method(#getLocation, []),
          returnValue: _i5.Future<_i2.LocationData>.value(
              _FakeLocationData_0(this, Invocation.method(#getLocation, []))))
      as _i5.Future<_i2.LocationData>);
}

/// A class which mocks [WeatherForecastFiveDay].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherForecastFiveDay extends _i1.Mock
    implements _i3.WeatherForecastFiveDay {
  MockWeatherForecastFiveDay() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get cod =>
      (super.noSuchMethod(Invocation.getter(#cod), returnValue: '') as String);
  @override
  int get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: 0) as int);
  @override
  int get cnt =>
      (super.noSuchMethod(Invocation.getter(#cnt), returnValue: 0) as int);
  @override
  List<_i3.WeatherForecast> get list =>
      (super.noSuchMethod(Invocation.getter(#list),
          returnValue: <_i3.WeatherForecast>[]) as List<_i3.WeatherForecast>);
  @override
  _i3.City get city => (super.noSuchMethod(Invocation.getter(#city),
      returnValue: _FakeCity_1(this, Invocation.getter(#city))) as _i3.City);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [CurrentWeather].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrentWeather extends _i1.Mock implements _i3.CurrentWeather {
  MockCurrentWeather() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Coord get coord => (super.noSuchMethod(Invocation.getter(#coord),
      returnValue: _FakeCoord_2(this, Invocation.getter(#coord))) as _i3.Coord);
  @override
  List<_i3.Weather> get weather =>
      (super.noSuchMethod(Invocation.getter(#weather),
          returnValue: <_i3.Weather>[]) as List<_i3.Weather>);
  @override
  String get base =>
      (super.noSuchMethod(Invocation.getter(#base), returnValue: '') as String);
  @override
  _i3.CurrentWeatherMainData get main =>
      (super.noSuchMethod(Invocation.getter(#main),
              returnValue:
                  _FakeCurrentWeatherMainData_3(this, Invocation.getter(#main)))
          as _i3.CurrentWeatherMainData);
  @override
  int get visibility =>
      (super.noSuchMethod(Invocation.getter(#visibility), returnValue: 0)
          as int);
  @override
  _i3.Wind get wind => (super.noSuchMethod(Invocation.getter(#wind),
      returnValue: _FakeWind_4(this, Invocation.getter(#wind))) as _i3.Wind);
  @override
  _i3.Clouds get clouds => (super.noSuchMethod(Invocation.getter(#clouds),
          returnValue: _FakeClouds_5(this, Invocation.getter(#clouds)))
      as _i3.Clouds);
  @override
  int get dt =>
      (super.noSuchMethod(Invocation.getter(#dt), returnValue: 0) as int);
  @override
  _i3.Sys get sys => (super.noSuchMethod(Invocation.getter(#sys),
      returnValue: _FakeSys_6(this, Invocation.getter(#sys))) as _i3.Sys);
  @override
  int get timezone =>
      (super.noSuchMethod(Invocation.getter(#timezone), returnValue: 0) as int);
  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  int get cod =>
      (super.noSuchMethod(Invocation.getter(#cod), returnValue: 0) as int);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [MalaysianCity].
///
/// See the documentation for Mockito's code generation for more information.
class MockMalaysianCity extends _i1.Mock implements _i6.MalaysianCity {
  MockMalaysianCity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get city =>
      (super.noSuchMethod(Invocation.getter(#city), returnValue: '') as String);
  @override
  String get lat =>
      (super.noSuchMethod(Invocation.getter(#lat), returnValue: '') as String);
  @override
  String get lng =>
      (super.noSuchMethod(Invocation.getter(#lng), returnValue: '') as String);
  @override
  String get country =>
      (super.noSuchMethod(Invocation.getter(#country), returnValue: '')
          as String);
  @override
  String get iso2 =>
      (super.noSuchMethod(Invocation.getter(#iso2), returnValue: '') as String);
  @override
  String get adminName =>
      (super.noSuchMethod(Invocation.getter(#adminName), returnValue: '')
          as String);
  @override
  String get capital =>
      (super.noSuchMethod(Invocation.getter(#capital), returnValue: '')
          as String);
  @override
  String get population =>
      (super.noSuchMethod(Invocation.getter(#population), returnValue: '')
          as String);
  @override
  String get populationProper =>
      (super.noSuchMethod(Invocation.getter(#populationProper), returnValue: '')
          as String);
  @override
  _i3.Coord get coord => (super.noSuchMethod(Invocation.getter(#coord),
      returnValue: _FakeCoord_2(this, Invocation.getter(#coord))) as _i3.Coord);
  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [LocationData].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationData extends _i1.Mock implements _i2.LocationData {
  MockLocationData() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [Exception].
///
/// See the documentation for Mockito's code generation for more information.
class MockException extends _i1.Mock implements Exception {
  MockException() {
    _i1.throwOnMissingStub(this);
  }
}
